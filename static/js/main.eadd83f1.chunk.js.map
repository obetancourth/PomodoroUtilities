{"version":3,"sources":["components/boardSetup/boardClient.js","components/timer/timer.js","assets/notif.mp4","components/boardSetup/audio.js","components/boardSetup/krakenSetup.js","components/boardSetup/board.js","components/customTimers/cutomToolBar.js","components/customTimers/customTimer.js","assets/logo480.png","components/about/about.js","components/menu.js","App.js","reportWebVitals.js","index.js"],"names":["apiCliente","axios","create","PATToken","localStorage","getItem","defaults","headers","common","post","put","baseURL","process","PATAssigned","getBoards","a","get","data","getBoardById","id","getCardsFromColumn","boardId","columnId","getCardsById","cardId","commentData","commentLedge","length","each","o","text","indexOf","ledger","addCommentToCard","comment","updateCommentToCard","commentId","COLOR_CODE","Timer","timeLimit","color","size","label","counterStart","counterEnd","_timeLimit","_color","_size","_counterStart","_counterEnd","InterValId","_label","useState","timeLeft","setTimeLeft","running","setRunning","fractionArc","setFractionArc","tick","time","handler","timeOut","workerTimers","timeFractionUnit","timeFraction","formatTimeLeft","minutes","Math","floor","seconds","useEffect","fraction","circlePathColor","timerBox","width","height","timerContent","style","className","onClick","e","viewBox","xmlns","cx","cy","r","fill","strokeDasharray","d","audio","Audio","notif","playing","addEventListener","playNotif","play","SetupKraken","onPatSave","show","_onPatSave","PATText","setPATText","type","placeholder","value","name","onChange","target","PATTokenD","setItem","href","rel","Board","boards","setBoards","currentBoard","setCurrentBoard","cards","setCards","currentCard","setCurrentCard","currentColumn","setCurrentColumn","startTime","objective","setTrack","endTime","setEndTime","showSetup","setShowSetup","boardOnClick","dataset","columnOnClick","onCardClick","textData","toLocaleDateString","toLocaleTimeString","listItems","columns","map","i","data-id","data-name","cardItems","description","plugins","gfm","singleTilde","objectivet","prompt","Date","console","log","CustomToolbar","addTimer","formData","setFormData","toggleView","setToggleView","ToolbarClasses","join","trim","min","max","step","CustomTimer","timers","setTimers","storedTimers","JSON","parse","timerWidgets","newTimers","filter","stringify","removeTimer","About","_show","alt","src","Logo","Menu","currentMenu","_handler","App","activeMenu","setActiveMenu","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eadd83f1.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiCliente = axios.create();\n\nlet PATToken = localStorage.getItem(\"PATToken\") || \"\";\n\napiCliente.defaults.headers.common['cache-control'] = \"no-cache\";\napiCliente.defaults.headers.post['Content-Type'] = \"no-cache\";\napiCliente.defaults.headers.put['Content-Type'] = \"no-cache\";\napiCliente.defaults.baseURL = process.env.REACT_APP_GK_API;\n\nif (PATToken !== \"\") {\n  apiCliente.defaults.headers.common[\"Authorization\"] = `Bearer ${PATToken}`;\n}\n\n// apiCliente.defaults.headers.common[\"Authorization\"] = `Bearer ${process.env.REACT_APP_GK_PAT}`;\n\nexport default apiCliente;\n\nexport const PATAssigned = ()=>{\n  return PATToken !== \"\";\n}\n\nexport const setPAT = (PATTokenD)=>{\n  PATToken = PATTokenD;\n  apiCliente.defaults.headers.common[\"Authorization\"] = `Bearer ${PATTokenD}`;\n}\n\nexport const getBoards = async ()=>{\n  let data = await apiCliente.get(\"boards\");\n  return data.data;\n}\n\nexport const getBoardById = async (id)=>{\n  let data = await apiCliente.get(`boards/${id}?fields=columns&fields=labels&fields=name`);\n\n  return data.data;\n}\n\nexport const getCardsFromColumn = async (boardId, columnId) => {\n  let data = await apiCliente.get(`boards/${boardId}/columns/${columnId}/cards?fields=description&fields=name&fields=due_date`);\n\n  return data.data;\n}\n\nexport const getCardsById = async (boardId, cardId) => {\n  let data = await apiCliente.get(`boards/${boardId}/cards/${cardId}?fields=description&fields=name&fields=due_date`);\n  let commentData = await apiCliente.get(`boards/${boardId}/cards/${cardId}/comments?`);\n  let commentLedge = {};\n  if (commentData.data.length > 0) {\n    commentData.data.each((o) => {\n      if (o.text.indexOf(\"Pomodoro Task Ledger\") >= 0) {\n        commentLedge = { id: o.id, text: o.text }\n      }\n    });\n  }\n  return { ...data.data, ledger: commentLedge };\n}\n\nexport const addCommentToCard = async (boardId, cardId, comment) => {\n  let data = await apiCliente.post(`boards/${boardId}/cards/${cardId}/comments`, {text:comment});\n  //\n  return data.data;\n}\n\nexport const updateCommentToCard = async (boardId, cardId, commentId, comment) => {\n  let data = await apiCliente.post(`boards/${boardId}/cards/${cardId}/comments/${commentId}`, { text: comment });\n  return data.data;\n}\n","import {useState, useEffect} from 'react';\nimport * as workerTimers from 'worker-timers';\nimport './timer.css';\n\nexport const COLOR_CODE = {\n  info: \"green\",\n  warning: \"yellow\",\n  alert: \"red\"\n}\n\nconst Timer = ({timeLimit, color, size, label, counterStart, counterEnd}) => {\n  const _timeLimit = timeLimit && true ? timeLimit : 15;\n  const _color = color && true ? color: COLOR_CODE.info;\n  const _size = size || 250;\n  const _counterStart = counterStart || function(){} ;\n  const _counterEnd = counterEnd || function () { };\n  let InterValId = null;\n  const _label = label || \"\";\n\n  const [timeLeft, setTimeLeft] = useState(_timeLimit);\n  const [running, setRunning] = useState(false);\n  const [fractionArc, setFractionArc] = useState(283);\n\n\n  function tick(time, timeLimit, handler, timeOut, label) {\n    InterValId = workerTimers.setTimeout(\n      () => {\n        time -= 1;\n        const timeFractionUnit = (timeLimit - time) / (timeLimit ** 2);\n        let timeFraction = ((time / timeLimit) - timeFractionUnit) * 283;\n        timeFraction = timeFraction < 0 ? 0 : timeFraction;\n        if (time > 0) {\n          handler(time, timeFraction);\n          tick(time, timeLimit, handler, timeOut);\n        } else {\n          handler(time, timeFraction);\n          timeOut();\n        }\n      },\n      1000\n    )\n  }\n\n  function formatTimeLeft(time) {\n    const minutes = Math.floor(time / 60);\n    let seconds = time % 60;\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n    return `${minutes}:${seconds}`;\n  }\n\n\n  useEffect(() => {\n    if (!!!InterValId && running) {\n      _counterStart();\n      tick(timeLeft, _timeLimit, (time, fraction) => { setTimeLeft(time); setFractionArc(fraction); }, () => {setRunning(false); _counterEnd();});\n      return () => {\n        workerTimers.clearTimeout(InterValId);\n        // eslint-disable-next-line \n        InterValId = null;\n      }\n    }\n  }, [running]);\n\n  let circlePathColor = `${_color}`;\n\n\n  const timerBox = {width:`${_size}px`,height:`${_size}px`};\n  const timerContent = { width: `${_size}px`};\n  const labelBox = {}; //  {transform: `rotate(-90deg) translateX(-60%) translateY(-${(_size * 0.5 + 24)}px)`};\n  return (\n    <section style={timerContent}>\n      <div className=\"timer_label\" style={labelBox}>\n        <span>{_label}</span>\n      </div>\n      <div style={timerBox}>\n        <div className=\"base-timer\" onClick={(e) => { if (timeLeft === 0) { setTimeLeft(_timeLimit); setFractionArc(283);} setRunning(true);}}>\n          <svg className=\"base-timer__svg\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g className=\"base-timer__circle\">\n              <circle className=\"base-timer__path-elapsed\"\n                cx=\"50\" cy=\"50\" r=\"45\"\n                fill={timeLeft === 0 ? circlePathColor: \"white\"}\n              />\n              <path\n                id=\"base-timer-path-remaining\"\n                strokeDasharray={`${fractionArc} 283`}\n                className=\"base-timer__path-remaining\"\n                color={circlePathColor}\n                d=\"\n              M 50, 50\n              m -45, 0\n              a 45,45 0 1,0 90,0\n              a 45,45 0 1,0 -90,0\n            \"\n              ></path>\n            </g>\n          </svg>\n          <span id=\"base-timer-label\" className=\"base-timer__label\">\n            {timeLeft === 0 ?\n              (<span className=\"time_done\">Done<br/>Press to Restart<br/>{formatTimeLeft(_timeLimit)}</span>):\n              formatTimeLeft(timeLeft)\n            }\n          </span>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Timer;\n","export default __webpack_public_path__ + \"static/media/notif.95a705f9.mp4\";","import notif from '../../assets/notif.mp4';\n\nconst audio = new Audio(notif);\nlet playing = false;\naudio.addEventListener(\"ended\", ()=>{playing=false});\nexport const playNotif = ()=>{\n  if(!playing){\n    audio.play();\n  }\n}\n\n/*\nconst useAudio = url => {\n  const [audio] = useState(new Audio(notif));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  },\n    [playing]\n  );\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle];\n};\n\nconst Player = ({ url }) => {\n  const [playing, toggle] = useAudio(url);\n\n  return (\n    <div>\n      <button onClick={toggle}>{playing ? \"Pause\" : \"Play\"}</button>\n    </div>\n  );\n};\n\nexport default Player;\n*/\n","import {useState} from 'react';\n\nimport { setPAT} from './boardClient';\nconst SetupKraken = ({ onPatSave, show } )=>{\n  const _onPatSave = onPatSave || (()=>null);\n  const [PATText, setPATText] = useState(\"\");\n  return(\n    <section className={show ? \"dashboard PAT\" :\"pageHide\"}>\n      <label>PAT Value</label>\n      <input type=\"text\"\n        placeholder=\"PAT (GK Personal Access Token)\"\n        value={PATText}\n        name=\"PATtext\"\n        onChange = {(e)=>{setPATText(e.target.value)}}\n      />\n      <button onClick={()=>{\n        localStorage.setItem(\"PATToken\", PATText);\n        setPAT(PATText);\n        _onPatSave();\n      }}>Save PAT</button>\n      <a href=\"https://app.gitkraken.com/pats/new?name=PomodoroApp&scope=board:write,user:read\" target=\"_blank\" rel=\"noreferrer\">Create new PAT</a>\n    </section>\n  )\n}\n\nexport default SetupKraken;\n","import { useEffect, useState} from 'react';\n\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\n\nimport { getBoards, getBoardById, getCardsFromColumn, getCardsById, addCommentToCard, updateCommentToCard, PATAssigned} from './boardClient';\nimport Timer from '../timer/timer';\nimport { playNotif } from './audio';\nimport './board.css';\nimport SetupKraken from './krakenSetup';\n/*\n <Timer timeLimit={15} size={300} label=\"Task\"></Timer>\n */\nconst Board = ({show}) => {\n\n  const [boards, setBoards] = useState([]);\n  const [currentBoard, setCurrentBoard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [currentCard, setCurrentCard] = useState({});\n  const [currentColumn, setCurrentColumn] = useState(\"\");\n  const [{ startTime, objective }, setTrack] = useState({ startTime: null, objective:\"\"});\n  const [endTime, setEndTime] = useState(null);\n  const [showSetup, setShowSetup] = useState(true);\n\n  useEffect(()=>{\n    (async ()=>{\n      if (PATAssigned()) {\n        setShowSetup(false);\n      }\n    })()}, []\n  );\n\n  useEffect(() => {\n    (async () => {\n      if (PATAssigned()) {\n        let data = await getBoards();\n        setBoards(data);\n      }\n    })()\n  }, [showSetup]\n  );\n  const boardOnClick = async (e)=>{\n    const {id} = e.target.dataset;\n    const data = await getBoardById(id);\n    setCurrentBoard(data);\n    setCards([]);\n  }\n\n  const columnOnClick = async (e)=>{\n    const { id, name } = e.target.dataset;\n    var data = await getCardsFromColumn(currentBoard.id, id);\n    setCurrentColumn(name);\n    setCards(data);\n    setCurrentCard({});\n  }\n\n  const onCardClick = async (e) => {\n      const { id } = e.target.dataset;\n      var data = await getCardsById(currentBoard.id, id);\n      setCurrentCard(data);\n    }\n\n  const counterStart = ()=>{\n    let objectivet = prompt(\"Set objective\");\n    setTrack({ startTime: new Date(), objective: objectivet });\n  }\n  const counterEnd = ()=>{\n    console.log(startTime, objective);\n    playNotif();\n    setEndTime(new Date());\n  }\n\n  useEffect( ()=>{\n    if(endTime){\n      (async ()=>{\n        let data = {}\n        if (!(currentCard.ledger.id && true)){\n          const textData = `## Pomodoro Task Ledger\n\n| Date | Start | End | Comment |\n| - | - | - | - |\n| ${startTime.toLocaleDateString()} | ${startTime.toLocaleTimeString()} | ${endTime.toLocaleTimeString()} | ${objective} |`;\n          data = await addCommentToCard(currentBoard.id, currentCard.id, textData);\n        } else {\n          const textData = `${currentCard.ledger.text}\n| ${startTime.toLocaleDateString()} | ${startTime.toLocaleTimeString()} | ${endTime.toLocaleTimeString()} | ${objective} |`;\n          data = await updateCommentToCard(currentBoard.id, currentCard.id, currentCard.ledger.id, textData);\n        }\n        setCurrentCard({...currentCard, ledger:{id:data.id, text:data.text}});\n        setEndTime(null);\n      })();\n    }\n  },\n  // eslint-disable-next-line \n  [endTime]\n  )\n  let listItems=null;\n  if (currentBoard.id && true){\n    listItems = (currentBoard.columns || []).map(\n      (o, i)=>{\n        return (<li key={i} data-id={o.id} data-name={o.name} onClick={columnOnClick}>{o.name}</li>);\n      }\n    );\n  } else {\n    listItems = boards.map((o, i) => {\n      return (<li key={i} data-id={o.id} data-name={o.name} onClick={boardOnClick}>{o.name}</li>);\n    });\n  }\n  let cardItems = (cards||[]).map((o,i)=>{\n    return (<li key={i} className=\"card\" >\n      <span className=\"cardHeader\" data-id={o.id} data-name={o.name} onClick={onCardClick}>{o.name}</span>\n      {(o.description && true) ?\n        (<ReactMarkdown plugins={[[gfm, { singleTilde: false }]]} >\n          {o.description.text||\"\"}\n          </ReactMarkdown>) : \"\"\n      }\n      </li>\n    );\n  });\n  if(showSetup){\n    return (\n      <section className={show ? \"dashboard\" : \"pageHide\"}>\n        <SetupKraken onPatSave={()=>{setShowSetup(false);}} show={show}></SetupKraken>\n      </section>\n    )\n  }\n\n  return (\n    <section className={show ? \"dashboard\" : \"pageHide\"}>\n      <div className=\"filter\">\n        {currentBoard.id && (<h1><span className=\"bckBoards\" onClick={()=>{\n          setCurrentBoard({});\n          setCards([]);\n          setCurrentCard({});\n        }}>&lt;</span><span className=\"boardTitle\">{currentBoard.name} Columns</span></h1>)}\n        {!currentBoard.id && (<h1>Gitkraken Boards</h1>)}\n        <ul>\n          {listItems}\n        </ul>\n        {cardItems.length > 0 && (<div><h2><span className=\"boardTitle\">Cards of {currentColumn}</span></h2><ul>{cardItems}</ul></div>)}\n      </div>\n      {currentCard.id && (\n        <div className=\"currentCard\">\n          <Timer\n            timeLimit={1500}\n            size={250}\n            label={currentCard.name}\n            counterStart={counterStart}\n            counterEnd={counterEnd}\n          ></Timer>\n          <div className=\"card_markdown\">\n            <ReactMarkdown plugins={[[gfm, { singleTilde: false }]]}>\n              {currentCard.ledger.text}\n            </ReactMarkdown>\n          </div>\n        </div>\n        )\n      }\n    </section>\n  );\n}\nexport default Board;\n","import {useState} from 'react';\nimport { RiMenuUnfoldLine, RiMenuFoldLine} from 'react-icons/ri';\nconst CustomToolbar = ( {addTimer} )=>{\n  const [formData, setFormData] = useState({\n    description:\"\",\n    time:60\n  });\n\n  const [toggleView, setToggleView] = useState(true);\n\n  const _addTimer = () => {\n    if(addTimer && true){\n      addTimer(formData);\n    } else {\n      console.log(\"No Timer Handler Assigned\");\n    }\n  }\n\n  const onChange=({target})=>{\n    const {name, value} = target;\n    setFormData(\n      {...formData, [name]:(name==='time')?value*60:value}\n    )\n  }\n  const ToolbarClasses = [\"ToolBar\", toggleView?\"\":\"hide\"];\n  return (\n    <section className={ToolbarClasses.join(' ').trim()}>\n      <div className=\"goRight\">\n        <div onClick={() => { setToggleView(!toggleView); }}>{toggleView ? (<RiMenuFoldLine />) : (<RiMenuUnfoldLine />)}</div>\n      </div>\n      <div>\n        <label>Timer Name</label>\n        <input type=\"text\" name=\"description\" value={formData.description} onChange={onChange} ></input>\n      </div>\n      <div>\n        <label>Timer Minutes</label>\n        <input type=\"number\" min=\"1\" max=\"1140\" step=\"1\" value={formData.time/60} name=\"time\" onChange={onChange}></input>\n      </div>\n      <div>\n      <button onClick={_addTimer}>Add New Timer</button>\n      </div>\n    </section>\n  );\n}\n\nexport default CustomToolbar;\n","import {useState, useEffect} from 'react';\nimport { MdDeleteForever } from 'react-icons/md';\nimport CustomToolbar from './cutomToolBar';\nimport Timer from '../timer/timer';\nimport { playNotif } from '../boardSetup/audio';\n\nimport './customTimer.css';\nconst CustomTimer = ({show})=>{\n    const [timers, setTimers] = useState([]);\n\n    useEffect( ()=>{\n      const storedTimers = localStorage.getItem(\"PMDCTimers\");\n      if(storedTimers && true){\n        setTimers(JSON.parse(storedTimers));\n      }\n    }, []);\n\n    const addTimer = (data)=>{\n      const newTimers = [...timers, data];\n      localStorage.setItem(\"PMDCTimers\", JSON.stringify(newTimers));\n      setTimers(newTimers);\n    }\n\n    const removeTimer = (label)=>{\n      const newTimers = timers.filter((o)=>o.description!==label);\n      localStorage.setItem(\"PMDCTimers\", JSON.stringify(newTimers));\n      setTimers(newTimers);\n    }\n\n    const counterEnd = () => {\n      playNotif();\n    }\n    const timerWidgets = timers.map(\n      (o, i)=>{\n        return (<section key={i} className=\"TimerItem\">\n          <Timer\n            timeLimit={o.time}\n            color=\"green\"\n            label={o.description}\n            counterEnd={counterEnd}\n          ></Timer>\n          <section className=\"deleteBtnCont\">\n            <div className=\"deletebtn\" onClick={() => { removeTimer(o.description) }}><MdDeleteForever /></div>\n          </section>\n        </section>);\n      }\n    );\n\n    return (\n      <section className={show ? \"CustomTimer\" :\"pageHide\"}>\n        <CustomToolbar addTimer={addTimer} />\n        <section className=\"TimersBoard\">\n          {timerWidgets}\n        </section>\n      </section>\n    )\n}\n\nexport default CustomTimer;\n","export default __webpack_public_path__ + \"static/media/logo480.3e812b23.png\";","\nimport Logo from \"../../assets/logo480.png\";\nconst About = ({show}) =>{\n  const _show = show && true;\n  return (\n    <section className={_show ? \"About\" :\"pageHide\"}>\n      <h1>Pomodoro Utilities</h1>\n      <img alt=\"Pomodoro Logo\"src={Logo} />\n      <div>By Orlando J Betancourth</div>\n      <div>orlando.betancourth@gmail.com</div>\n    </section>\n  )\n}\n\nexport default About;\n","const Menu = ({ handler, currentMenu})=>{\n  const _handler = handler || (()=>{});\n  return(\n    <section className=\"menu\">\n       <div onClick={()=>{ _handler(1) }} className={(currentMenu===1)?\"activeMenu\":\"\"}>Timers</div>\n      <div onClick={()=>{_handler(0)}} className={(currentMenu===0)?\"activeMenu\":\"\"}>GitKraken</div>\n      <div onClick={() => { _handler(2) }} className={(currentMenu===2)?\"activeMenu\":\"\"}>About</div>\n    </section>\n  );\n}\n\nexport default Menu;\n","import './App.css';\nimport Board from './components/boardSetup/board';\nimport CustomTimer from './components/customTimers/customTimer';\nimport About from './components/about/about';\nimport Menu from './components/menu';\nimport {useState} from 'react';\nfunction App() {\n  const [activeMenu, setActiveMenu] = useState(1);\n\n  return (\n    <div className=\"App\">\n      <Menu handler={setActiveMenu} currentMenu={activeMenu}></Menu>\n      <Board show={activeMenu === 0}></Board>\n      <CustomTimer show={activeMenu === 1}></CustomTimer>\n      <About show={activeMenu === 2}></About>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}